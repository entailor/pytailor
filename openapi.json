{
  "openapi": "3.0.2",
  "info": {
    "title": "Tailor.wf REST API",
    "description": "Tailor Workflow System",
    "version": "0.9.0"
  },
  "paths": {
    "/projects/{project_id}": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Details about the specified project",
        "operationId": "project_details_projects__project_id__get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Lists the workflows in the given project",
        "operationId": "workflow_list_projects__project_id__workflows_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Workflow List Projects  Project Id  Workflows Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowSummary"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "workflow"
        ],
        "summary": "Create a new workflow",
        "operationId": "create_workflow_projects__project_id__workflows_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/users": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Lists the users in the specified project",
        "operationId": "user_list_projects__project_id__users_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response User List Projects  Project Id  Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows/{wf_id}": {
      "get": {
        "tags": [
          "workflow"
        ],
        "summary": "Details about the specified workflow",
        "operationId": "workflow_details_projects__project_id__workflows__wf_id__get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow ID"
            },
            "name": "wf_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows/{wf_id}/tasks": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Lists the tasks for the specified workflow",
        "operationId": "task_list_projects__project_id__workflows__wf_id__tasks_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow ID"
            },
            "name": "wf_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Task List Projects  Project Id  Workflows  Wf Id  Tasks Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskSummary"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows/{wf_id}/tasks/{task_id}": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Details about the specified task",
        "operationId": "task_details_projects__project_id__workflows__wf_id__tasks__task_id__get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow ID"
            },
            "name": "wf_id",
            "in": "path"
          },
          {
            "description": "Task ID",
            "required": true,
            "schema": {
              "title": "Task Id",
              "type": "string",
              "description": "Task ID"
            },
            "name": "task_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/tasks/checkouts": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Checks out a task matching the specified filter",
        "operationId": "task_checkouts_tasks_checkouts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCheckout"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskExecutionData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/tasks/checkins": {
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Updates a task's state",
        "operationId": "task_checkins_tasks_checkins_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskExecutionData"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "current_user"
        ],
        "summary": "The profile information for the current user",
        "operationId": "profile_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/workflows": {
      "get": {
        "tags": [
          "current_user"
        ],
        "summary": "All workflows created by the current user",
        "operationId": "workflows_workflows_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Workflows Workflows Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowSummary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "current_user"
        ],
        "summary": "All projects accessible by the current user",
        "operationId": "projects_projects_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Projects Projects Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "current_user"
        ],
        "summary": "All accounts accessible by the current user",
        "operationId": "projects_accounts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Projects Accounts Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/filesets": {
      "post": {
        "tags": [
          "file_sets"
        ],
        "summary": "Creates a new fileset for the given project",
        "operationId": "create_projects__project_id__filesets_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/filesets/{fileset_id}/uploads": {
      "post": {
        "tags": [
          "file_sets"
        ],
        "summary": "Creates upload URLs for the given fileset, optionally scoped for the specified Task",
        "operationId": "upload_projects__project_id__filesets__fileset_id__uploads_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "FileSet id",
            "required": true,
            "schema": {
              "title": "Fileset Id",
              "type": "string",
              "description": "FileSet id"
            },
            "name": "fileset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSetUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/filesets/{fileset_id}/downloads": {
      "post": {
        "tags": [
          "file_sets"
        ],
        "summary": "Creates download URLs for the given fileset, optionally scoped for the specified Task",
        "operationId": "download_projects__project_id__filesets__fileset_id__downloads_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "FileSet id",
            "required": true,
            "schema": {
              "title": "Fileset Id",
              "type": "string",
              "description": "FileSet id"
            },
            "name": "fileset_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSetDownload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows/{wf_id}/uploads": {
      "post": {
        "tags": [
          "file_sets"
        ],
        "summary": "Creates upload URLs for the given workflow, optionally scoped for the specified Task",
        "operationId": "upload_alias_projects__project_id__workflows__wf_id__uploads_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow id",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow id"
            },
            "name": "wf_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSetUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflows/{wf_id}/downloads": {
      "get": {
        "tags": [
          "file_sets"
        ],
        "summary": "Lists the files of the workflow, with download URLs",
        "operationId": "download_alias_projects__project_id__workflows__wf_id__downloads_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow id",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow id"
            },
            "name": "wf_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "file_sets"
        ],
        "summary": "Creates download URLs for the given workflow, optionally scoped for the specified Task",
        "operationId": "download_alias_projects__project_id__workflows__wf_id__downloads_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow id",
            "required": true,
            "schema": {
              "title": "Wf Id",
              "type": "string",
              "description": "Workflow id"
            },
            "name": "wf_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileSetDownload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileSet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflow_definitions": {
      "get": {
        "tags": [
          "workflow_definition"
        ],
        "summary": "Lists the workflow_definitions in the given project",
        "operationId": "workflow_definition_list_projects__project_id__workflow_definitions_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Workflow Definition List Projects  Project Id  Workflow Definitions Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkflowDefinitionSummary"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/workflow_definitions/{wf_def_id}": {
      "get": {
        "tags": [
          "workflow_definition"
        ],
        "summary": "Details about the specified workflow definition",
        "operationId": "workflow_definition_details_projects__project_id__workflow_definitions__wf_def_id__get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          },
          {
            "description": "Workflow definition ID",
            "required": true,
            "schema": {
              "title": "Wf Def Id",
              "type": "string",
              "description": "Workflow definition ID"
            },
            "name": "wf_def_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/accounts/{account_id}/workflow_definitions": {
      "post": {
        "tags": [
          "workflow_definition"
        ],
        "summary": "Create a new workflow definition",
        "operationId": "create_workflow_definition_accounts__account_id__workflow_definitions_post",
        "parameters": [
          {
            "description": "Account id",
            "required": true,
            "schema": {
              "title": "Account Id",
              "type": "string",
              "description": "Account id"
            },
            "name": "account_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowDefinitionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/projects/{project_id}/permissions/workflow-definitions": {
      "get": {
        "tags": [
          "workflow_definition"
        ],
        "summary": "Lists the available workflow-definition ids for project",
        "operationId": "allowed_workflow_definitions_projects__project_id__permissions_workflow_definitions_get",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "workflow_definition"
        ],
        "summary": "Change the available workflow-definition ids for project",
        "operationId": "update_allowed_workflow_definitions_projects__project_id__permissions_workflow_definitions_post",
        "parameters": [
          {
            "description": "Project id",
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string",
              "description": "Project id"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/accounts": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Lists all accounts",
        "operationId": "account_list_admin_accounts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Account List Admin Accounts Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Account"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create a new account",
        "operationId": "create_account_admin_accounts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/accounts/{account_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Information about a specific account",
        "operationId": "account_detail_admin_accounts__account_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Account Id",
              "type": "string"
            },
            "name": "account_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/projects": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Lists all projects",
        "operationId": "account_list_admin_projects_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Account List Admin Projects Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create a new project",
        "operationId": "create_project_admin_projects_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/projects/{project_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Information about a specific project",
        "operationId": "project_list_admin_projects__project_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "string"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Lists all users",
        "operationId": "user_list_admin_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response User List Admin Users Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSummary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create a new user",
        "operationId": "create_user_admin_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/admin/users/{user_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Information about a specific user",
        "operationId": "find_user_admin_users__user_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "type": "string"
            },
            "name": "user_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTBearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Lists all accounts",
        "operationId": "account_list_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Account List Health Get",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Account": {
        "title": "Account",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique identifier",
            "type": "string"
          },
          "organization_name": {
            "title": "organization name",
            "type": "string"
          },
          "organization_id": {
            "title": "the official registration number of the organization",
            "type": "string"
          },
          "projects": {
            "title": "the projects owned by this account, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "users": {
            "title": "the users who are a member of this account, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflow_definitions_owned": {
            "title": "the workflow definitions owned by this account, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflow_definitions_subscriptions": {
            "title": "the workflow definitions subscribed to by this account, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Context": {
        "title": "Context",
        "type": "object",
        "properties": {
          "inputs": {
            "title": "Scoped inputs",
            "type": "object"
          },
          "outputs": {
            "title": "Scoped outputs",
            "type": "object"
          },
          "files": {
            "title": "File list by tag",
            "type": "object"
          }
        }
      },
      "FileSet": {
        "title": "FileSet",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique identifier",
            "type": "string"
          },
          "tags": {
            "title": "File links",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileSetLinks"
            }
          },
          "size": {
            "title": "Total size of files in fileset",
            "type": "string"
          }
        }
      },
      "FileSetDownload": {
        "title": "FileSetDownload",
        "type": "object",
        "properties": {
          "task_id": {
            "title": "Task to scope the fileset against",
            "type": "string"
          },
          "tags": {
            "title": "List of tags to download files for",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FileSetLink": {
        "title": "FileSetLink",
        "required": [
          "filename",
          "url"
        ],
        "type": "object",
        "properties": {
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "size": {
            "title": "Size",
            "type": "string"
          }
        }
      },
      "FileSetLinks": {
        "title": "FileSetLinks",
        "type": "object",
        "properties": {
          "tag_name": {
            "title": "The tag name of the files",
            "type": "string"
          },
          "links": {
            "title": "The files",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileSetLink"
            }
          }
        }
      },
      "FileSetUpload": {
        "title": "FileSetUpload",
        "required": [
          "tags"
        ],
        "type": "object",
        "properties": {
          "task_id": {
            "title": "Task to scope the fileset against",
            "type": "string"
          },
          "tags": {
            "title": "Dict of tags, each containing a list of file names",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "PermissionChange": {
        "title": "PermissionChange",
        "type": "object",
        "properties": {
          "add": {
            "title": "Ids to add",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "delete": {
            "title": "Ids to add",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "PermissionList": {
        "title": "PermissionList",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Project": {
        "title": "Project",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique identifier",
            "type": "string"
          },
          "name": {
            "title": "project name",
            "type": "string"
          },
          "account_id": {
            "title": "the project owner account, by id",
            "type": "string"
          },
          "storage_type": {
            "$ref": "#/components/schemas/StorageType"
          },
          "storage_identifier": {
            "title": "Name or equivalent within the given storage_type",
            "type": "string"
          },
          "external_reference": {
            "title": "a reference number or code this project uses in other systems",
            "type": "string"
          },
          "available_workflow_definitions": {
            "title": "the workflow definitions this project can use, by id",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "users": {
            "title": "the users who are a member of this account, by id",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "StorageType": {
        "title": "StorageType",
        "enum": [
          "AZURE_BLOB_CONTAINER",
          "LOCAL_FILESYSTEM",
          "S3_BUCKET"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Task": {
        "title": "Task",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique identifier of the task",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the task",
            "type": "string"
          },
          "updated_utc": {
            "title": "timestamp of the latest change, in ISO-8601 datetime format",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "created_utc": {
            "title": "timestamp of when the task was created, in ISO-8601 datetime format",
            "type": "string"
          },
          "runs": {
            "title": "list of results from running this task",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskRun"
            }
          },
          "definition": {
            "title": "definition of the task",
            "type": "object"
          },
          "inputs": {
            "title": "Contextualized inputs for task",
            "type": "object"
          },
          "outputs": {
            "title": "Contextualized outputs for task",
            "type": "object"
          },
          "files": {
            "title": "Contextualized files for task",
            "type": "object"
          }
        }
      },
      "TaskCheckout": {
        "title": "TaskCheckout",
        "type": "object",
        "properties": {
          "worker_capabilities": {
            "title": "The worker's task capabilities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "worker_id": {
            "title": "The unique id of the worker",
            "type": "string"
          },
          "worker_name": {
            "title": "A human-friendly name describing the worker",
            "type": "string"
          },
          "projects": {
            "title": "(Optional) limit tasks to these projects, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflow_definitions": {
            "title": "(Optional) limit tasks to those origination from these workflow definitions, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflows": {
            "title": "(Optional) limit tasks to these workflows, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TaskExecutionData": {
        "title": "TaskExecutionData",
        "type": "object",
        "properties": {
          "run_id": {
            "title": "The current Task Run id, if it is running",
            "type": "string"
          },
          "task": {
            "title": "The task",
            "allOf": [
              {
                "$ref": "#/components/schemas/Task"
              }
            ]
          },
          "context": {
            "title": "The task's context",
            "allOf": [
              {
                "$ref": "#/components/schemas/Context"
              }
            ]
          },
          "fileset_id": {
            "title": "Reference to the Workflow's fileset object",
            "type": "string"
          },
          "project_id": {
            "title": "Reference to the Workflow's project",
            "type": "string"
          }
        }
      },
      "TaskRun": {
        "title": "TaskRun",
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "ended_utc": {
            "title": "timestamp of when the workflow ended, in ISO-8601 datetime format",
            "type": "string"
          },
          "traceback": {
            "title": "detailed error message",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "traceback_raw": {
            "title": "unformatted, detailed error message",
            "type": "string"
          },
          "error_message": {
            "title": "summarized error message",
            "type": "string"
          }
        }
      },
      "TaskState": {
        "title": "TaskState",
        "enum": [
          "ARCHIVED",
          "FAILED",
          "STOPPED",
          "WAITING",
          "READY",
          "RESERVED",
          "RUNNING",
          "COMPLETED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TaskSummary": {
        "title": "TaskSummary",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique identifier of the task",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the task",
            "type": "string"
          },
          "updated_utc": {
            "title": "timestamp of the latest change, in ISO-8601 datetime format",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          }
        }
      },
      "TaskUpdate": {
        "title": "TaskUpdate",
        "type": "object",
        "properties": {
          "task_id": {
            "title": "The identifier of the task",
            "type": "string"
          },
          "run_id": {
            "title": "The identifier of the task run",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "outputs": {
            "title": "The updated outputs of the task run",
            "type": "object"
          },
          "failure_summary": {
            "title": "A summary of the failure",
            "type": "string"
          },
          "failure_detail": {
            "title": "Detailed information about the failure",
            "type": "string"
          },
          "run_dir": {
            "title": "The location on the Worker's filesystem for the current task run. Mandatory on first check in.",
            "type": "string"
          },
          "perform_branching": {
            "title": "Signal to the backend to perform branching",
            "type": "boolean",
            "default": false
          }
        }
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "username": {
            "title": "unique username",
            "type": "string"
          },
          "id": {
            "title": "unique identifier",
            "type": "string"
          },
          "accounts": {
            "title": "the accounts the user has access to, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "title": "the projects the user has access to, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "given_name": {
            "title": "the user's given name",
            "type": "string"
          },
          "family_name": {
            "title": "the user's family name",
            "type": "string"
          },
          "email": {
            "title": "the user's email address",
            "type": "string"
          },
          "phone_number": {
            "title": "the user's phone number",
            "type": "string"
          }
        }
      },
      "UserSummary": {
        "title": "UserSummary",
        "type": "object",
        "properties": {
          "username": {
            "title": "unique username",
            "type": "string"
          },
          "id": {
            "title": "unique identifier",
            "type": "string"
          },
          "accounts": {
            "title": "the accounts the user has access to, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "projects": {
            "title": "the projects the user has access to, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Workflow": {
        "title": "Workflow",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique ID of the workflow",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the workflow",
            "type": "string"
          },
          "project_id": {
            "title": "project that owns this workflow",
            "type": "string"
          },
          "updated_utc": {
            "title": "timestamp of the latest change, in ISO-8601 datetime format",
            "type": "string"
          },
          "user_id": {
            "title": "user that created this workflow",
            "type": "string"
          },
          "state": {
            "title": "current aggregated state of the workflow's tasks",
            "type": "string"
          },
          "created_utc": {
            "title": "timestamp of when the workflow was created, in ISO-8601 datetime format",
            "type": "string"
          },
          "task_links": {
            "title": "links between tasks in the workflow",
            "type": "object"
          },
          "root_tasks": {
            "title": "root task(s) of the workflow",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "task_states": {
            "title": "current state of each task",
            "type": "object"
          },
          "fileset_id": {
            "title": "reference to the Workflow's fileset object",
            "type": "string"
          },
          "dag": {
            "title": "The Workflow's dag",
            "type": "object"
          },
          "inputs": {
            "title": "The Workflow's input",
            "type": "object"
          },
          "outputs": {
            "title": "The Workflow's output",
            "type": "object"
          },
          "files": {
            "title": "The Workflow's files",
            "type": "object"
          },
          "from_definition_id": {
            "title": "The workflow definition this Workflow is based on",
            "type": "string"
          },
          "tasks": {
            "title": "The Workflow's output",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowTask"
            }
          }
        }
      },
      "WorkflowCreate": {
        "title": "WorkflowCreate",
        "type": "object",
        "properties": {
          "from_definition_id": {
            "title": "(Optional) the workflow definition to base this Workflow on",
            "type": "string"
          },
          "dag": {
            "title": "(Optional) The DAG specification as JSON",
            "type": "object"
          },
          "name": {
            "title": "The name selected for this Workflow",
            "type": "string"
          },
          "inputs": {
            "title": "(Optional) the inputs to the Workflow",
            "type": "object"
          },
          "worker_name_restriction": {
            "title": "(Optional) the name of the one Worker who should run this workflow",
            "type": "string"
          },
          "fileset_id": {
            "title": "(Optional) use input files from the specified FileSet. If not specified, a new, initially empty, FileSet will be created",
            "type": "string"
          }
        }
      },
      "WorkflowDefinition": {
        "title": "WorkflowDefinition",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique ID of the workflow definition",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the workflow definition",
            "type": "string"
          },
          "description": {
            "title": "description of the workflow",
            "type": "string"
          },
          "dag": {
            "title": "the dag as json",
            "type": "object"
          },
          "inputs_schema": {
            "title": "the inputs schema as json",
            "type": "object"
          },
          "outputs_schema": {
            "title": "the outputs schema as json",
            "type": "object"
          },
          "files_schema": {
            "title": "the files schema as json",
            "type": "object"
          },
          "owner_id": {
            "title": "the account that owns this workflow definition, by id",
            "type": "string"
          },
          "subscribers": {
            "title": "the accounts that subscribes to this workflow definition, by id",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_by_user": {
            "title": "the uuid of the creating user",
            "type": "string"
          },
          "created_on": {
            "title": "the date and time this workflow definition was created",
            "type": "string"
          }
        }
      },
      "WorkflowDefinitionCreate": {
        "title": "WorkflowDefinitionCreate",
        "type": "object",
        "properties": {
          "dag": {
            "title": "The DAG definition as JSON",
            "type": "object"
          },
          "inputs_schema": {
            "title": "(Optional) The inputs schema specification as JSON",
            "type": "object"
          },
          "outputs_schema": {
            "title": "(Optional) The outputs schema specification as JSON",
            "type": "object"
          },
          "files_schema": {
            "title": "(Optional) The files schema specification as JSON",
            "type": "object"
          },
          "name": {
            "title": "The name selected for this Workflow",
            "type": "string"
          },
          "description": {
            "title": "The description of this workflow definition, in Markdown format or plain text",
            "type": "string"
          }
        }
      },
      "WorkflowDefinitionSummary": {
        "title": "WorkflowDefinitionSummary",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique ID of the workflow definition",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the workflow definition",
            "type": "string"
          },
          "description": {
            "title": "description of the workflow",
            "type": "string"
          }
        }
      },
      "WorkflowSummary": {
        "title": "WorkflowSummary",
        "type": "object",
        "properties": {
          "id": {
            "title": "unique ID of the workflow",
            "type": "string"
          },
          "name": {
            "title": "non-unique name of the workflow",
            "type": "string"
          },
          "project_id": {
            "title": "project that owns this workflow",
            "type": "string"
          },
          "updated_utc": {
            "title": "timestamp of the latest change, in ISO-8601 datetime format",
            "type": "string"
          },
          "user_id": {
            "title": "user that created this workflow",
            "type": "string"
          },
          "state": {
            "title": "current aggregated state of the workflow's tasks",
            "type": "string"
          }
        }
      },
      "WorkflowTask": {
        "title": "WorkflowTask",
        "type": "object",
        "properties": {
          "id": {
            "title": "Task id",
            "type": "string"
          },
          "name": {
            "title": "Task name",
            "type": "string"
          },
          "type": {
            "title": "Task type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}